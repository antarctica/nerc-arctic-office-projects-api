---

# == Notes ==

# - GitLab automatically passes artifacts from previous stages by default
# - This project requires runners with specific tags to execute specific jobs
# - This project includes variables specific to using 'Docker In Docker'
# - This project uses additional services ran alongside the job images
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/web-apps/arctic-office-projects-api/settings/ci_cd

# = Secret variables
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensitive values are represented by "[Sensitive]"
#
# - AWS IAM id/secret keys for 'bas-gitlab-arctic-office-projects-api' user
# > AWS_ACCESS_KEY_ID: "[Sensetive]"
# > AWS_SECRET_ACCESS_KEY: "[Sensetive]"
#
# - Heroku
# > HEROKU_API_KEY: "[Sensitive]"
#
# - Sentry
# > SENTRY_AUTH_TOKEN: "[Sensetive]"
# > SENTRY_DSN: "[Sensetive]"
#
# - BAS API Documentation
# > API_DOCS_PIPELINE_TOKEN: "[Sensitive]"

# == Global settings ==

services:
  -
    name: postgres:11.1-alpine
    alias: app-db

stages:
  - build-base
  - test
  - lint
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_CERT_PATH: /certs/client
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_VERIFY: 1
  GITLAB_REGISTRY: docker-registry.data.bas.ac.uk
  POSTGRES_DB: app_test
  POSTGRES_USER: app
  POSTGRES_PASSWORD: "password"
  APP_NAME: arctic-office-projects-api
  HEROKU_APP_STAGE_NAME: bas-arctic-projects-api-stage
  HEROKU_APP_PROD_NAME: bas-arctic-projects-api-prod
  SENTRY_ORG: antarctica
  SENTRY_PROJECT: arctic-office-projects-api
  SNYK_ORG: antarctica
  SNYK_PROJECT: arctic-office-projects-api
  API_DOCS_PROJECT: arctic-office-projects
  API_DOCS_STAGE_BUCKET: bas-api-docs-content-testing
  API_DOCS_PROD_BUCKET: bas-api-docs-content

build-base:
  stage: build-base
  tags:
    - dnd
  services:
    - docker:dind
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $GITLAB_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/arctic-office-projects-api:latest -f Dockerfile-ci .
    - docker push $CI_REGISTRY_IMAGE/arctic-office-projects-api:latest
  only:
    - master
  cache:
    paths:
      - .venv

image:
  name: docker-registry.data.bas.ac.uk/web-apps/arctic-office-projects-api/arctic-office-projects-api:latest
  entrypoint: [""]

# == Jobs ==

test-app:
  stage: test
  variables:
    FLASK_ENV: development
    SQLALCHEMY_DATABASE_URI: postgresql://app:password@app-db:5432/app_test
  before_script:
    - "poetry install"
  script:
    - "poetry run flask test --test-runner junit"
  artifacts:
    paths:
    reports:
      junit: test-results.xml

dependencies-app:
  stage: lint
  before_script:
    - "apk add --update nodejs npm"
    - "npm install snyk -g"
    - "poetry install"
  script:
    - "poetry run snyk test"
    - "poetry run snyk monitor --project-name=$SNYK_PROJECT --org=$SNYK_ORG"
  only:
    - master

pep8-app:
  stage: lint
  before_script:
    - "poetry install"
  script:
    - "poetry run flake8 . --ignore=E501 --exclude migrations,.venv"

bandit-app:
  stage: lint
  script:
    - "poetry install"
    - "poetry run bandit -r arctic-office-project-api/"

build-heroku-stage:
  stage: build
  tags:
    - dnd
  services:
    - docker:dind
  image:
    name: docker:19.03-dind
    entrypoint: [""]
  script:
    - "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $GITLAB_REGISTRY"
    - "docker login -u _ -p $HEROKU_API_KEY registry.heroku.com"
    - "docker build -t registry.heroku.com/$HEROKU_APP_STAGE_NAME/web -f Dockerfile.heroku --build-arg APP_RELEASE=$CI_COMMIT_SHA --build-arg APP_ENV=staging ."
    - "docker build -t registry.heroku.com/$HEROKU_APP_STAGE_NAME/release -f Dockerfile.heroku-release ."
    - "docker push registry.heroku.com/$HEROKU_APP_STAGE_NAME/web"
    - "docker push registry.heroku.com/$HEROKU_APP_STAGE_NAME/release"
  only:
    - master

build-heroku-prod:
  stage: build
  tags:
    - dnd
  services:
    - docker:dind
  image:
    name: docker:19.03-dind
    entrypoint: [""]
  script:
    - "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $GITLAB_REGISTRY"
    - "docker login -u _ -p $HEROKU_API_KEY registry.heroku.com"
    - "docker build -t registry.heroku.com/$HEROKU_APP_PROD_NAME/web -f Dockerfile.heroku --build-arg APP_RELEASE=$CI_COMMIT_SHA --build-arg APP_ENV=production ."
    - "docker build -t registry.heroku.com/$HEROKU_APP_PROD_NAME/release -f Dockerfile.heroku-release ."
    - "docker push registry.heroku.com/$HEROKU_APP_PROD_NAME/web"
    - "docker push registry.heroku.com/$HEROKU_APP_PROD_NAME/release"
  only:
    - tags

deploy-heroku-stage:
  stage: deploy
  image:
    name: wingrunr21/alpine-heroku-cli
    entrypoint: [""]
  script:
    - "heroku container:release web release --app $HEROKU_APP_STAGE_NAME"
  only:
    - master
  environment:
    name: Staging
    url: https://api.bas.ac.uk/arctic-office-projects/testing/

deploy-heroku-prod:
  stage: deploy
  image:
    name: wingrunr21/alpine-heroku-cli
    entrypoint: [""]
  script:
    - "heroku container:release web release --app $HEROKU_APP_PROD_NAME"
  only:
    - tags
  environment:
    name: Production
    url: https://api.bas.ac.uk/arctic-office-projects/v1/

deploy-docs-stage:
  stage: deploy
  image:
    name: governmentpaas/awscli:latest
    entrypoint: [""]
  script:
    - "aws s3 cp docs/usage.md s3://$API_DOCS_STAGE_BUCKET/services/$API_DOCS_PROJECT/testing/usage/usage.md"
    - "aws s3 cp openapi.yml s3://$API_DOCS_STAGE_BUCKET/services/$API_DOCS_PROJECT/testing/openapi.yml"
    - "curl -X POST -F token=$API_DOCS_PIPELINE_TOKEN -F ref=master https://gitlab.data.bas.ac.uk/api/v4/projects/530/trigger/pipeline"
  only:
    - master
  environment:
    name: Staging - Documentation
    url: https://docs-testing.api.bas.ac.uk/arctic-office-projects

deploy-docs-prod:
  stage: deploy
  image:
    name: governmentpaas/awscli:latest
    entrypoint: [""]
  script:
    - "aws s3 cp docs/usage.md s3://$API_DOCS_PROD_BUCKET/services/$API_DOCS_PROJECT/$CI_COMMIT_TAG/usage/usage.md"
    - "aws s3 cp openapi.yml s3://$API_DOCS_PROD_BUCKET/services/$API_DOCS_PROJECT/$CI_COMMIT_TAG/openapi.yml"
    - "curl -X POST -F token=$API_DOCS_PIPELINE_TOKEN -F ref=master https://gitlab.data.bas.ac.uk/api/v4/projects/530/trigger/pipeline"
  only:
    - tags
  environment:
    name: Production - Documentation
    url: https://docs.api.bas.ac.uk/arctic-office-projects

sentry-stage:
  stage: deploy
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - "sentry-cli releases new --finalize $CI_COMMIT_SHA"
    - "sentry-cli releases deploys $CI_COMMIT_SHA new -e staging"
  only:
    - master

sentry-prod:
  stage: deploy
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - "sentry-cli releases new --finalize $CI_COMMIT_SHA"
    - "sentry-cli releases deploys $CI_COMMIT_SHA new -e production"
  only:
    - tags
